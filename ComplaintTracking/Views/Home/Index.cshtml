@model HomeIndexViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<div class="usa-alert usa-alert-error">
    <div class="usa-alert-body">
        <h3 class="usa-alert-heading">Notice</h3>
        <p class="usa-alert-text">
            Due to the recent global event this last Friday, any records submitted July 18th may be lost. EPD IT is still working
            on data recovery and will provide updates as soon as possible. Please resubmit any missing data.
        </p>
    </div>
</div>

<h1>@ViewData["Title"]</h1>

<form class="usa-search usa-search-big" asp-action="Index">
    <div role="search">
        <label class="usa-sr-only" asp-for="FindComplaint">Open Complaint ID</label>
        <input asp-for="FindComplaint" type="search" placeholder="Complaint ID" class="gaepd-input-medium-large" />
        <button type="submit"><span class="usa-search-submit-text">Open</span></button>
    </div>
</form>

@if (User.IsInRole(CtsRole.Manager.ToString()))
{
    <h2>Complaints Pending Review</h2>
    @if (Model.MgrComplaintsPendingReview == null || Model.MgrComplaintsPendingReview.Count() == 0)
    {
        <p>None.</p>
    }
    else
    {
        <table class="usa-table-borderless gaepd-table-autowidth gaepd-table-responsive">
            <thead>
                <tr>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrComplaintsPendingReview.FirstOrDefault().Id)</th>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrComplaintsPendingReview.FirstOrDefault().DateReceived)</th>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrComplaintsPendingReview.FirstOrDefault().Status)</th>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrComplaintsPendingReview.FirstOrDefault().SourceFacilityName)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MgrComplaintsPendingReview)
                {
                    <tr>
                        <th scope="row" data-label="@Html.DisplayNameFor(m => item.Id)">
                            <a class="usa-button usa-button-outline" asp-action="Details" asp-controller="Complaints" asp-route-id="@item.Id">@Html.DisplayFor(m => item.Id)</a>
                        </th>
                        <td data-label="@Html.DisplayNameFor(m => item.DateReceived)">@Html.DisplayFor(m => item.DateReceived)</td>
                        <td data-label="@Html.DisplayNameFor(m => item.Status)">@item.Status.GetDisplayName()</td>
                        <td data-label="@Html.DisplayNameFor(m => item.SourceFacilityName)">
                            @Html.DisplayFor(m => item.SourceFacilityName)
                            @if (item.SourceLocation != null)
                            {
                                <br />

                                @Html.DisplayFor(m => item.SourceLocation)
                            }
                            <br />ID: @Html.DisplayFor(m => item.SourceFacilityId)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <h2>Complaints in @Model.MyOfficeName that have not been accepted</h2>
    @if (Model.MgrUnacceptedComplaints == null || Model.MgrUnacceptedComplaints.Count() == 0)
    {
        <p>None.</p>
    }
    else
    {
        <table class="usa-table-borderless gaepd-table-autowidth gaepd-table-responsive">
            <thead>
                <tr>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrUnacceptedComplaints.FirstOrDefault().Id)</th>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrUnacceptedComplaints.FirstOrDefault().DateReceived)</th>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrUnacceptedComplaints.FirstOrDefault().Status)</th>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrUnacceptedComplaints.FirstOrDefault().SourceFacilityName)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MgrUnacceptedComplaints)
                {
                    <tr>
                        <th scope="row" data-label="@Html.DisplayNameFor(m => item.Id)">
                            <a class="usa-button usa-button-outline" asp-action="Details" asp-controller="Complaints" asp-route-id="@item.Id">@Html.DisplayFor(m => item.Id)</a>
                        </th>
                        <td data-label="@Html.DisplayNameFor(m => item.DateReceived)">@Html.DisplayFor(m => item.DateReceived)</td>
                        <td data-label="@Html.DisplayNameFor(m => item.Status)">@item.Status.GetDisplayName()</td>
                        <td data-label="@Html.DisplayNameFor(m => item.SourceFacilityName)">
                            @Html.DisplayFor(m => item.SourceFacilityName)
                            @if (item.SourceLocation != null)
                            {
                                <br />

                                @Html.DisplayFor(m => item.SourceLocation)
                            }
                            <br />ID: @Html.DisplayFor(m => item.SourceFacilityId)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <h2>Unassigned Complaints in @Model.MyOfficeName</h2>
    @if (Model.MgrUnassignedComplaints == null || Model.MgrUnassignedComplaints.Count() == 0)
    {
        <p>None.</p>
    }
    else
    {
        <table class="usa-table-borderless gaepd-table-autowidth gaepd-table-responsive">
            <thead>
                <tr>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrUnassignedComplaints.FirstOrDefault().Id)</th>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrUnassignedComplaints.FirstOrDefault().DateReceived)</th>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrUnassignedComplaints.FirstOrDefault().Status)</th>
                    <th scope="col">@Html.DisplayNameFor(model => Model.MgrUnassignedComplaints.FirstOrDefault().SourceFacilityName)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MgrUnassignedComplaints)
                {
                    <tr>
                        <th scope="row" data-label="@Html.DisplayNameFor(m => item.Id)">
                            <a class="usa-button usa-button-outline" asp-action="Details" asp-controller="Complaints" asp-route-id="@item.Id">@Html.DisplayFor(m => item.Id)</a>
                        </th>
                        <td data-label="@Html.DisplayNameFor(m => item.DateReceived)">@Html.DisplayFor(m => item.DateReceived)</td>
                        <td data-label="@Html.DisplayNameFor(m => item.Status)">@item.Status.GetDisplayName()</td>
                        <td data-label="@Html.DisplayNameFor(m => item.SourceFacilityName)">
                            @Html.DisplayFor(m => item.SourceFacilityName)
                            @if (item.SourceLocation != null)
                            {
                                <br />

                                @Html.DisplayFor(m => item.SourceLocation)
                            }
                            <br />ID: @Html.DisplayFor(m => item.SourceFacilityId)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@if (Model.MyNewComplaints != null && Model.MyNewComplaints.Count() > 0)
{
    <h2>My New Complaints</h2>
    <table class="usa-table-borderless gaepd-table-autowidth gaepd-table-responsive">
        <thead>
            <tr>
                <th scope="col">@Html.DisplayNameFor(model => Model.MyNewComplaints.FirstOrDefault().Id)</th>
                <th scope="col">@Html.DisplayNameFor(model => Model.MyNewComplaints.FirstOrDefault().DateReceived)</th>
                <th scope="col">@Html.DisplayNameFor(model => Model.MyNewComplaints.FirstOrDefault().Status)</th>
                <th scope="col">@Html.DisplayNameFor(model => Model.MyNewComplaints.FirstOrDefault().SourceFacilityName)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.MyNewComplaints)
            {
                <tr>
                    <th scope="row" data-label="@Html.DisplayNameFor(m => item.Id)">
                        <a class="usa-button usa-button-outline" asp-action="Details" asp-controller="Complaints" asp-route-id="@item.Id">@Html.DisplayFor(m => item.Id)</a>
                    </th>
                    <td data-label="@Html.DisplayNameFor(m => item.DateReceived)">@Html.DisplayFor(m => item.DateReceived)</td>
                    <td data-label="@Html.DisplayNameFor(m => item.Status)">@item.Status.GetDisplayName()</td>
                    <td data-label="@Html.DisplayNameFor(m => item.SourceFacilityName)">
                        @Html.DisplayFor(m => item.SourceFacilityName)
                        @if (item.SourceLocation != null)
                        {
                            <br />

                            @Html.DisplayFor(m => item.SourceLocation)
                        }
                        <br />ID: @Html.DisplayFor(m => item.SourceFacilityId)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<h2>My Open Complaints</h2>
@if (Model.MyOpenComplaints == null || Model.MyOpenComplaints.Count() == 0)
{
    <p>None.</p>
}
else
{
    <table class="usa-table-borderless gaepd-table-autowidth gaepd-table-responsive">
        <thead>
            <tr>
                <th scope="col">@Html.DisplayNameFor(model => Model.MyOpenComplaints.FirstOrDefault().Id)</th>
                <th scope="col">@Html.DisplayNameFor(model => Model.MyOpenComplaints.FirstOrDefault().DateReceived)</th>
                <th scope="col">@Html.DisplayNameFor(model => Model.MyOpenComplaints.FirstOrDefault().Status)</th>
                <th scope="col">@Html.DisplayNameFor(model => Model.MyOpenComplaints.FirstOrDefault().SourceFacilityName)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.MyOpenComplaints)
            {
                <tr>
                    <th scope="row" data-label="@Html.DisplayNameFor(m => item.Id)">
                        <a class="usa-button usa-button-outline" asp-action="Details" asp-controller="Complaints" asp-route-id="@item.Id">@Html.DisplayFor(m => item.Id)</a>
                    </th>
                    <td data-label="@Html.DisplayNameFor(m => item.DateReceived)">@Html.DisplayFor(m => item.DateReceived)</td>
                    <td data-label="@Html.DisplayNameFor(m => item.Status)">@item.Status.GetDisplayName()</td>
                    <td data-label="@Html.DisplayNameFor(m => item.SourceFacilityName)">
                        @Html.DisplayFor(m => item.SourceFacilityName)
                        @if (item.SourceLocation != null)
                        {
                            <br />

                            @Html.DisplayFor(m => item.SourceLocation)
                        }
                        <br />ID: @Html.DisplayFor(m => item.SourceFacilityId)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (Model.MasterUnassignedComplaints != null && Model.MasterUnassignedComplaints.Count > 0)
{
    @foreach (var dictItem in Model.MasterUnassignedComplaints)
    {
        <h2>Master: Unassigned Complaints for @dictItem.Key.Name</h2>

        @if (dictItem.Value != null && dictItem.Value.Count > 0)
        {
            <table class="usa-table-borderless gaepd-table-autowidth gaepd-table-responsive">
                <thead>
                    <tr>
                        <th scope="col">@Html.DisplayNameFor(model => dictItem.Value.FirstOrDefault().Id)</th>
                        <th scope="col">@Html.DisplayNameFor(model => dictItem.Value.FirstOrDefault().DateReceived)</th>
                        <th scope="col">@Html.DisplayNameFor(model => dictItem.Value.FirstOrDefault().Status)</th>
                        <th scope="col">@Html.DisplayNameFor(model => dictItem.Value.FirstOrDefault().SourceFacilityName)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in dictItem.Value)
                    {
                        <tr>
                            <th scope="row" data-label="@Html.DisplayNameFor(m => item.Id)">
                                <a class="usa-button usa-button-outline" asp-action="Details" asp-controller="Complaints" asp-route-id="@item.Id">@Html.DisplayFor(m => item.Id)</a>
                            </th>
                            <td data-label="@Html.DisplayNameFor(m => item.DateReceived)">@Html.DisplayFor(m => item.DateReceived)</td>
                            <td data-label="@Html.DisplayNameFor(m => item.Status)">@item.Status.GetDisplayName()</td>
                            <td data-label="@Html.DisplayNameFor(m => item.SourceFacilityName)">
                                @Html.DisplayFor(m => item.SourceFacilityName)
                                @if (item.SourceLocation != null)
                                {
                                    <br />

                                    @Html.DisplayFor(m => item.SourceLocation)
                                }
                                <br />ID: @Html.DisplayFor(m => item.SourceFacilityId)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>None.</p>
        }

    }
}
