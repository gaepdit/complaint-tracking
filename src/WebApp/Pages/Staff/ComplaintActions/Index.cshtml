@page "{handler?}"
@using Cts.AppServices.ComplaintActions.Dto
@using Cts.WebApp.Models
@using Cts.WebApp.Pages.Shared.DisplayTemplates
@using Cts.WebApp.Platform.PageModelHelpers
@model IndexModel
@{
    ViewData["Title"] = "Complaint Action Search";
}

<h1>@ViewData["Title"]</h1>

<div class="container">
    <div class="row">
        <div class="p-3 rounded-3 bg-light-subtle border col-lg-9">
            <div class="text-body-secondary pb-2">
                <em>All fields are optional.</em>
            </div>
            <form method="get" asp-page-handler="Search" asp-fragment="SearchResults">
                <div class="mt-3 mb-1">
                    <button id="SearchButton" type="submit" class="btn btn-lg btn-primary col-4 me-2">Search</button>
                    <a asp-page="Index" class="btn btn-lg btn-outline-secondary col-4 col-md-3">Clear Form</a>
                </div>
            </form>
        </div>
    </div>
</div>

@if (Model.ShowResults)
{
    <div id="SearchResults" class="mt-4">
        <h3>Search Results</h3>

        @if (Model.SearchResults.TotalCount == 0)
        {
            <p class="lead text-info">No matching results found.</p>
        }
        else
        {
            <div class="table-responsive-md">
                <table class="gaepd-table-responsive table-hover" aria-label="Facility search results">
                    <caption class="caption-top">
                        <partial name="_PaginationNavAndCount" model="Model.PaginationNav" />
                    </caption>
                    <thead>
                    <tr class="text-nowrap">
                        <th scope="col" class="text-nowrap gaepd-sortable" data-label="Complaint ID">
                            <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                               asp-route-Sort="@(Model.Spec.Sort == SortBy.IdAsc ? nameof(SortBy.IdDesc) : nameof(SortBy.IdAsc))"
                               class="link-offset-2 text-dotted-underline">
                                Complaint ID @Html.DisplayFor(model => model.Spec.Sort, DisplayTemplate.SortArrow,
                                                 additionalViewData: new { up = nameof(SortBy.IdAsc), down = nameof(SortBy.IdDesc) })
                            </a>
                        </th>
                        <th scope="col" class="text-nowrap gaepd-sortable" data-label="Action Type">
                            <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                               asp-route-Sort="@(Model.Spec.Sort == SortBy.TypeAsc ? nameof(SortBy.TypeDesc) : nameof(SortBy.TypeAsc))"
                               class="link-offset-2 text-dotted-underline">
                                Action Type @Html.DisplayFor(model => model.Spec.Sort, DisplayTemplate.SortArrow,
                                                additionalViewData: new { up = nameof(SortBy.TypeAsc), down = nameof(SortBy.TypeDesc) })
                            </a>
                        </th>
                        <th scope="col" class="text-nowrap gaepd-sortable" data-label="Action Date">
                            <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                               asp-route-Sort="@(Model.Spec.Sort == SortBy.DateAsc ? nameof(SortBy.DateDesc) : nameof(SortBy.DateAsc))"
                               class="link-offset-2 text-dotted-underline">
                                Action Date @Html.DisplayFor(model => model.Spec.Sort, DisplayTemplate.SortArrow,
                                                additionalViewData: new { up = nameof(SortBy.DateAsc), down = nameof(SortBy.DateDesc) })
                            </a>
                        </th>
                        <th scope="col" data-label="Investigator">Investigator</th>
                        <th scope="col" data-label="Entered By">Entered By</th>
                        <th scope="col" data-label="Comments">Comments</th>
                    </tr>
                    </thead>

                    <tbody>
                    @foreach (var item in Model.SearchResults.Items)
                    {
                        <tr class="@(item.IsDeleted ? "table-danger" : item.ComplaintIsDeleted ? "table-warning" : "")">
                            <td data-label="Complaint ID">
                                <a asp-page="../Complaints/Details" asp-route-id="@item.ComplaintId.ToString()" class="btn btn-outline-primary btn-sm">@item.ComplaintId.ToString()</a>
                            </td>
                            <td data-label="Action Type">
                                @if (item.IsDeleted)
                                {
                                    <strong class="text-nowrap">DELETED ACTION</strong>
                                    <br />
                                }
                                @if (item.ComplaintIsDeleted)
                                {
                                    <strong class="text-nowrap">Deleted Complaint</strong>
                                    <br />
                                }
                                @Html.DisplayFor(_ => item.ActionTypeName, DisplayTemplate.StringOrPlaceholder)
                            </td>
                            <td data-label="Action Date" class="text-nowrap">@Html.DisplayFor(_ => item.ActionDate, DisplayTemplate.DateOnly)</td>
                            <td data-label="Investigator">@Html.DisplayFor(_ => item.Investigator, DisplayTemplate.StringOrPlaceholder)</td>
                            <td data-label="Entered By">
                                @Html.DisplayFor(_ => item.EnteredByName, DisplayTemplate.StringOrPlaceholder)
                                <br/>
                                @Html.DisplayFor(_ => item.EnteredByOffice, DisplayTemplate.StringOrPlaceholder, new { Placeholder = "" })
                            </td>
                            <td data-label="Comments">@Html.DisplayFor(_ => item.Comments, DisplayTemplate.TruncateText)</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            <partial name="_PaginationNav" model="Model.PaginationNav" />
        }
    </div>
}

@section Scripts {
    <script src="~/js/formSearch.js"></script>
}
