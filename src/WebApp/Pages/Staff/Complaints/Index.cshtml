@page "{handler?}"
@using Cts.AppServices.Complaints.QueryDto
@using Cts.WebApp.Platform.PageModelHelpers
@using Cts.WebApp.Pages.Shared.DisplayTemplates
@using Cts.WebApp.Models
@model IndexModel
@{
    ViewData["Title"] = "Complaint Search";
}

<h1>@ViewData["Title"]</h1>

<div class="container">
    <div class="row">
        <div class="p-3 rounded-3 bg-light-subtle border col-lg-9">
            <div class="text-body-secondary pb-2">
                <em>All fields are optional.</em>
            </div>
            <form method="get" asp-page-handler="Search" asp-fragment="SearchResults">
                <!-- Existing form fields -->
                <div class="mt-3 mb-1">
                    <button id="SearchButton" type="submit" class="btn btn-lg btn-primary col-4 me-2">Search</button>
                    <a asp-page="Index" class="btn btn-lg btn-outline-secondary col-4 col-md-3">Clear Form</a>
                </div>
            </form>
        </div>
    </div>
</div>

@if (Model.ShowResults)
{
    <div id="SearchResults" class="mt-4">
        <div class="container-full">
            <div class="row col-lg-9 justify-content-between align-items-start g-0 my-1">
                <div class="col">
                    <h3>Search Results</h3>
                </div>
                @if (Model.SearchResults.TotalCount > 0)
                {
                    <div class="col-auto d-print-none ms-2">
                        <a asp-page="DownloadSearch" asp-all-route-data="Model.Spec.AsRouteValues()" class="btn btn-sm btn-outline-secondary">
                            <svg class="bi me-1">
                                <use href="@Url.Content("~/images/app-icons.svg")#app-icon-download"></use>
                            </svg>&nbsp;Download search results
                        </a>
                    </div>
                }
            </div>
        </div>

        @if (Model.SearchResults.TotalCount == 0)
        {
            <p class="lead text-info">No matching results found.</p>
        }
        else
        {
            <div class="table-responsive-md">
                <table class="gaepd-table-responsive table-hover" aria-label="Facility search results">
                    <caption class="caption-top">
                        <partial name="Shared/_PaginationNavAndCount" model="Model.PaginationNav" />
                    </caption>
                    <thead>
                        <tr class="text-nowrap">
                            <th scope="col" class="text-nowrap gaepd-sortable" data-label="ID">
                                <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                                   asp-route-Sort="@(Model.Spec.Sort == SortBy.IdAsc ? nameof(SortBy.IdDesc) : nameof(SortBy.IdAsc))"
                                   class="link-offset-2 text-dotted-underline">
                                    ID @Html.DisplayFor(model => model.Spec.Sort, DisplayTemplate.SortArrow,
                                                 new { up = nameof(SortBy.IdAsc), down = nameof(SortBy.IdDesc) })
                                </a>
                            </th>
                            <th scope="col" class="text-nowrap gaepd-sortable" data-label="Received">
                                <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                                   asp-route-Sort="@(Model.Spec.Sort == SortBy.ReceivedDateAsc ? nameof(SortBy.ReceivedDateDesc) : nameof(SortBy.ReceivedDateAsc))"
                                   class="link-offset-2 text-dotted-underline">
                                    Received @Html.DisplayFor(model => model.Spec.Sort, DisplayTemplate.SortArrow,
                                                 new { up = nameof(SortBy.ReceivedDateAsc), down = nameof(SortBy.ReceivedDateDesc) })
                                </a>
                            </th>
                            <th scope="col" class="text-nowrap gaepd-sortable" data-label="Status">
                                <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                                   asp-route-Sort="@(Model.Spec.Sort == SortBy.StatusAsc ? nameof(SortBy.StatusDesc) : nameof(SortBy.StatusAsc))"
                                   class="link-offset-2 text-dotted-underline">
                                    Status @Html.DisplayFor(model => model.Spec.Sort, DisplayTemplate.SortArrow,
                                                 new { up = nameof(SortBy.StatusAsc), down = nameof(SortBy.StatusDesc) })
                                </a>
                            </th>
                            <th scope="col" data-label="Source/Location">Source/Location</th>
                            <th scope="col" data-label="Current Assignment">Current Assignment</th>
                            <th scope="col" data-label="Areas of Concern">Areas of Concern</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.SearchResults.Items)
                    {
                        <tr class="@(item.IsDeleted ? "table-danger" : "")">
                            <td data-label="ID">
                                <a asp-page="Details" asp-route-id="@item.Id.ToString()" class="btn btn-outline-primary btn-sm">@item.Id.ToString()</a>
                            </td>
                            <td data-label="Received" class="text-nowrap">@Html.DisplayFor(_ => item.ReceivedDate, DisplayTemplate.ShortDate)</td>
                            <td data-label="Status">
                                @if (item.IsDeleted)
                                {
                                    <strong>DELETED</strong>
                                    <br />
                                }
                                @Html.DisplayFor(_ => item.Status, DisplayTemplate.StringOrPlaceholder)
                                @if (item.ComplaintClosedDate != null)
                                {
                                    <br />
                                    @:on @Html.DisplayFor(_ => item.ComplaintClosedDate, DisplayTemplate.ShortDate)
                                }
                            </td>
                            <td data-label="Source/Location">
                                @Html.DisplayFor(_ => item.SourceFacilityName, DisplayTemplate.StringOrPlaceholder)
                                <ul>
                                    @if (item.SourceFacilityIdNumber != null)
                                    {
                                        <li>@item.SourceFacilityIdNumber</li>
                                    }
                                    @if (item.ComplaintCounty != null)
                                    {
                                        <li>@item.ComplaintCounty County</li>
                                    }
                                </ul>
                            </td>
                            <td data-label="Current Assignment">
                                @Html.DisplayFor(_ => item.AssignedOwnerName, DisplayTemplate.StringOrPlaceholder, new { Placeholder = "[Unassigned]" })
                                <br />
                                @Html.DisplayFor(_ => item.CurrentOfficeName, DisplayTemplate.StringOrPlaceholder, new { Placeholder = "[No office assigned]" })
                            </td>
                            <td data-label="Areas of Concern">
                                <ol type="I">
                                    <li>@Html.DisplayFor(_ => item.PrimaryConcernName, DisplayTemplate.StringOrPlaceholder)</li>
                                    @if (item.SecondaryConcernName is not null)
                                    {
                                        <li>@Html.DisplayFor(_ => item.SecondaryConcernName, DisplayTemplate.StringOrPlaceholder)</li>
                                    }
                                </ol>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            <partial name="_PaginationNav" model="Model.PaginationNav" />
        }
    </div>
}

@section Scripts {
    <script src="~/js/dateValidation.js"></script>
    <script>
    datePairs(
        "Spec_ReceivedFrom",
        "Spec_ReceivedTo",
        "Received FROM Date",
        "Received THROUGH Date");
    datePairs(
        "Spec_ClosedFrom",
        "Spec_ClosedTo",
        "Closed FROM Date",
        "Closed THROUGH Date");
    </script>
    <script src="~/js/formSearch.js"></script>
    <partial name="_StaffSelectScriptsPartial" />
    <script>
    setUpStaffDropdown(
        "@nameof(Model.Spec)_@nameof(ComplaintSearchDto.Office)",
        "@nameof(Model.Spec)_@nameof(ComplaintSearchDto.Assigned)",
        false,
        "@SelectOptions.SelectTextAny");
    </script>
}
