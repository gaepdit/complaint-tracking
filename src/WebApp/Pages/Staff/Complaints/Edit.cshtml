@page "{id:int?}"
@using Cts.Domain.ValueObjects
@using Cts.WebApp.Pages.Shared.EditorTemplates
@model EditModel
@{
    ViewData["Title"] = $"Edit Complaint ID {Model.Id.ToString()}";
    ViewData["NoAnchors"] = "True";
    var phoneTypesSelectList = Html.GetEnumSelectList<PhoneType>().ToArray();
}

<h1>@ViewData["Title"]</h1>

<div class="p-3 border border-primary-subtle rounded-3 bg-light-subtle mb-3">
    <form method="post">
        <div asp-validation-summary="All" class="alert alert-danger" role="alert"></div>

        <h2 class="h3">Received</h2>
        <div class="row mb-3">
            <div class="col-md input-group mb-3">
                @Html.EditorFor(model => model.Item.ReceivedDate, EditorTemplate.InputDateOnly)
                @Html.EditorFor(model => model.Item.ReceivedTime, EditorTemplate.InputTimeOnly)
            </div>
            <div class="col-md mb-3">
                @Html.EditorFor(model => model.Item.ReceivedById, EditorTemplate.Select,
                    additionalViewData: new { Items = Model.StaffSelectList })
            </div>
        </div>

        <h2 class="h3">Complaint</h2>
        <div class="row mb-3">
            <div class="col-md-6">
                <h3 class="h5">Description</h3>
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.ComplaintNature, EditorTemplate.Textarea,
                        additionalViewData: new { Rows = 5 })
                </div>
            </div>
            <div class="col-md-6">
                <h3 class="h5">Environmental areas of concern</h3>
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.PrimaryConcernId, EditorTemplate.Select,
                        additionalViewData: new { Items = Model.ConcernsSelectList })
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.SecondaryConcernId, EditorTemplate.Select,
                        additionalViewData: new { Items = Model.ConcernsSelectList, Placeholder = string.Empty })
                </div>
            </div>
        </div>

        <h2 class="h3">Caller</h2>
        <div class="row">
            <div class="col-md-6 mb-3">
                @Html.EditorFor(model => model.Item.CallerName, EditorTemplate.Input)
            </div>
            <div class="col-md-6 mb-3">
                @Html.EditorFor(model => model.Item.CallerRepresents, EditorTemplate.Input)
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.CallerEmail, EditorTemplate.Input)
                </div>
                <div class="input-group mb-3">
                    <div class="form-floating">
                        <input asp-for="Item.CallerPhoneNumber!.Number" class="form-control" />
                        <label asp-for="Item.CallerPhoneNumber" class="form-label"></label>
                        <span asp-validation-for="Item.CallerPhoneNumber" class="invalid-feedback"></span>
                    </div>
                    @Html.EditorFor(model => model.Item.CallerPhoneNumber!.Type, EditorTemplate.Select,
                        additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                </div>
                <div class="input-group mb-3">
                    <div class="form-floating">
                        <input asp-for="Item.CallerSecondaryPhoneNumber!.Number" class="form-control" />
                        <label asp-for="Item.CallerSecondaryPhoneNumber" class="form-label"></label>
                        <span asp-validation-for="Item.CallerSecondaryPhoneNumber" class="invalid-feedback"></span>
                    </div>
                    @Html.EditorFor(model => model.Item.CallerSecondaryPhoneNumber!.Type, EditorTemplate.Select,
                        additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                </div>
                <div class="input-group mb-3">
                    <div class="form-floating">
                        <input asp-for="Item.CallerTertiaryPhoneNumber!.Number" class="form-control" />
                        <label asp-for="Item.CallerTertiaryPhoneNumber" class="form-label"></label>
                        <span asp-validation-for="Item.CallerTertiaryPhoneNumber" class="invalid-feedback"></span>
                    </div>
                    @Html.EditorFor(model => model.Item.CallerTertiaryPhoneNumber!.Type, EditorTemplate.Select,
                        additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.CallerAddress.Street, EditorTemplate.Input)
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.CallerAddress.Street2, EditorTemplate.Input)
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.CallerAddress.City, EditorTemplate.Input)
                </div>
                <div class="input-group mb-3">
                    @Html.EditorFor(model => model.Item.CallerAddress.State, EditorTemplate.Select,
                        additionalViewData: new { Items = Model.StatesSelectList, Placeholder = string.Empty })
                    @Html.EditorFor(model => model.Item.CallerAddress.PostalCode, EditorTemplate.Input)
                </div>
            </div>
        </div>

        <h2 class="h3">Complaint Location</h2>
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.ComplaintLocation, EditorTemplate.Textarea,
                        additionalViewData: new { Rows = 5 })
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.ComplaintDirections, EditorTemplate.Textarea,
                        additionalViewData: new { Rows = 5 })
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.ComplaintCity, EditorTemplate.Input)
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.Item.ComplaintCounty, EditorTemplate.Select,
                        additionalViewData: new { Items = Model.CountiesSelectList, Placeholder = string.Empty })
                </div>
            </div>
        </div>

        <h2 class="h3">Source</h2>
        <div class="row mb-3">
            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.EditorFor(model => model.Item.SourceFacilityName, EditorTemplate.Input)
                </div>
                <div class="col-md-6 mb-3">
                    @Html.EditorFor(model => model.Item.SourceFacilityIdNumber, EditorTemplate.Input)
                </div>
            </div>
        </div>

        <h2 class="h3">Source Contact</h2>
        <div class="row mb-3">
            <div class="mb-3">
                <button id="copy-caller-info" type="button" class="btn btn-outline-info">Copy contact/address from Caller</button>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <div class="mb-3">
                        @Html.EditorFor(model => model.Item.SourceContactName, EditorTemplate.Input)
                    </div>
                    <div class="form-floating mb-3">
                        @Html.EditorFor(model => model.Item.SourceEmail, EditorTemplate.Input)
                    </div>
                    <div class="input-group mb-3">
                        <div class="form-floating">
                            <input asp-for="Item.SourcePhoneNumber!.Number" class="form-control" />
                            <label asp-for="Item.SourcePhoneNumber" class="form-label"></label>
                            <span asp-validation-for="Item.SourcePhoneNumber" class="invalid-feedback"></span>
                        </div>
                        @Html.EditorFor(model => model.Item.SourcePhoneNumber!.Type, EditorTemplate.Select,
                            additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                    </div>
                    <div class="input-group mb-3">
                        <div class="form-floating">
                            <input asp-for="Item.SourceSecondaryPhoneNumber!.Number" class="form-control" />
                            <label asp-for="Item.SourceSecondaryPhoneNumber" class="form-label"></label>
                            <span asp-validation-for="Item.SourceSecondaryPhoneNumber" class="invalid-feedback"></span>
                        </div>
                        @Html.EditorFor(model => model.Item.SourceSecondaryPhoneNumber!.Type, EditorTemplate.Select,
                            additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                    </div>
                    <div class="input-group mb-3">
                        <div class="form-floating">
                            <input asp-for="Item.SourceTertiaryPhoneNumber!.Number" class="form-control" />
                            <label asp-for="Item.SourceTertiaryPhoneNumber" class="form-label"></label>
                            <span asp-validation-for="Item.SourceTertiaryPhoneNumber" class="invalid-feedback"></span>
                        </div>
                        @Html.EditorFor(model => model.Item.SourceTertiaryPhoneNumber!.Type, EditorTemplate.Select,
                            additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                    </div>
                </div>

                <div class="col-md-6 mb-3">
                    <div class="mb-3">
                        @Html.EditorFor(model => model.Item.SourceAddress.Street, EditorTemplate.Input)
                    </div>
                    <div class="mb-3">
                        @Html.EditorFor(model => model.Item.SourceAddress.Street2, EditorTemplate.Input)
                    </div>
                    <div class="mb-3">
                        @Html.EditorFor(model => model.Item.SourceAddress.City, EditorTemplate.Input)
                    </div>
                    <div class="input-group mb-3">
                        @Html.EditorFor(model => model.Item.SourceAddress.State, EditorTemplate.Select,
                            additionalViewData: new { Items = Model.StatesSelectList, Placeholder = string.Empty })
                        @Html.EditorFor(model => model.Item.SourceAddress.PostalCode, EditorTemplate.Input)
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-3 mb-1">
            <button type="submit" class="btn btn-primary col-6 col-sm-4 col-lg-3 me-2">Save Changes</button>
            <a asp-page="Details" asp-route-id="@Model.Id.ToString()" class="btn btn-outline-secondary">Cancel</a>
        </div>
        <div class="text-danger-emphasis mt-3">* denotes a required field</div>
    </form>
</div>

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/copyContactInfo.js"></script>
}
