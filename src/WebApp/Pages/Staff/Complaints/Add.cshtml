@page
@using Cts.AppServices.Attachments
@using Cts.AppServices.Complaints.CommandDto
@using Cts.Domain.ValueObjects
@using Cts.WebApp.Pages.Shared.EditorTemplates
@using Cts.WebApp.Platform.PageModelHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model AddModel
@{
    ViewData["Title"] = "Add A New Complaint";
    ViewData["NoAnchors"] = "True";
    var phoneTypesSelectList = Html.GetEnumSelectList<PhoneType>().ToArray();
}

<h1>@ViewData["Title"]</h1>

<div class="p-3 border border-primary-subtle rounded-3 bg-light-subtle">
    <form method="post" enctype="multipart/form-data">
        <div asp-validation-summary="All" class="alert alert-danger" role="alert"></div>

        <h2>Received</h2>
        <div class="row mb-3">
            <div class="col-md input-group mb-3">
                @Html.EditorFor(model => model.NewComplaint.ReceivedDate, EditorTemplate.InputDateOnly)
                @Html.EditorFor(model => model.NewComplaint.ReceivedTime, EditorTemplate.InputTimeOnly)
            </div>
            <div class="col-md mb-3">
                @Html.EditorFor(model => model.NewComplaint.ReceivedById, EditorTemplate.Select,
                    additionalViewData: new { Items = Model.AllActiveStaffSelectList })
            </div>
        </div>

        <h2>Complaint</h2>
        <div class="row mb-3">
            <div class="col-md-6">
                <h3 class="h5">Description</h3>
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.ComplaintNature, EditorTemplate.Textarea,
                        additionalViewData: new { Rows = 5 })
                </div>
            </div>
            <div class="col-md-6">
                <h3 class="h5">Environmental areas of concern</h3>
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.PrimaryConcernId, EditorTemplate.Select,
                        additionalViewData: new { Items = Model.ConcernsSelectList })
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.SecondaryConcernId, EditorTemplate.Select,
                        additionalViewData: new { Items = Model.ConcernsSelectList, Placeholder = string.Empty })
                </div>
            </div>
        </div>

        <h2>Caller</h2>
        <div class="row">
            <div class="col-md-6 mb-3">
                @Html.EditorFor(model => model.NewComplaint.CallerName, EditorTemplate.Input)
            </div>
            <div class="col-md-6 mb-3">
                @Html.EditorFor(model => model.NewComplaint.CallerRepresents, EditorTemplate.Input)
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.CallerEmail, EditorTemplate.Input)
                </div>
                <div class="input-group mb-3">
                    <div class="form-floating">
                        <input asp-for="NewComplaint.CallerPhoneNumber!.Number" class="form-control" />
                        <label asp-for="NewComplaint.CallerPhoneNumber" class="form-label"></label>
                        <span asp-validation-for="NewComplaint.CallerPhoneNumber" class="invalid-feedback"></span>
                    </div>
                    @Html.EditorFor(model => model.NewComplaint.CallerPhoneNumber!.Type, EditorTemplate.Select,
                        additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                </div>
                <div class="input-group mb-3">
                    <div class="form-floating">
                        <input asp-for="NewComplaint.CallerSecondaryPhoneNumber!.Number" class="form-control" />
                        <label asp-for="NewComplaint.CallerSecondaryPhoneNumber" class="form-label"></label>
                        <span asp-validation-for="NewComplaint.CallerSecondaryPhoneNumber" class="invalid-feedback"></span>
                    </div>
                    @Html.EditorFor(model => model.NewComplaint.CallerSecondaryPhoneNumber!.Type, EditorTemplate.Select,
                        additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                </div>
                <div class="input-group mb-3">
                    <div class="form-floating">
                        <input asp-for="NewComplaint.CallerTertiaryPhoneNumber!.Number" class="form-control" />
                        <label asp-for="NewComplaint.CallerTertiaryPhoneNumber" class="form-label"></label>
                        <span asp-validation-for="NewComplaint.CallerTertiaryPhoneNumber" class="invalid-feedback"></span>
                    </div>
                    @Html.EditorFor(model => model.NewComplaint.CallerTertiaryPhoneNumber!.Type, EditorTemplate.Select,
                        additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.CallerAddress.Street, EditorTemplate.Input)
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.CallerAddress.Street2, EditorTemplate.Input)
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.CallerAddress.City, EditorTemplate.Input)
                </div>
                <div class="input-group mb-3">
                    @Html.EditorFor(model => model.NewComplaint.CallerAddress.State, EditorTemplate.Select,
                        additionalViewData: new { Items = Model.StatesSelectList, Placeholder = string.Empty })
                    @Html.EditorFor(model => model.NewComplaint.CallerAddress.PostalCode, EditorTemplate.Input)
                </div>
            </div>
        </div>

        <h2>Complaint Location</h2>
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.ComplaintLocation, EditorTemplate.Textarea,
                        additionalViewData: new { Rows = 5 })
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.ComplaintDirections, EditorTemplate.Textarea,
                        additionalViewData: new { Rows = 5 })
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.ComplaintCity, EditorTemplate.Input)
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.ComplaintCounty, EditorTemplate.Select,
                        additionalViewData: new { Items = Model.CountiesSelectList, Placeholder = string.Empty })
                </div>
            </div>
        </div>

        <h2>Source</h2>
        <div class="row mb-3">
            <div class="col-md-6 mb-3">
                @Html.EditorFor(model => model.NewComplaint.SourceFacilityName, EditorTemplate.Input)
            </div>
            <div class="col-md-6 mb-3">
                @Html.EditorFor(model => model.NewComplaint.SourceFacilityIdNumber, EditorTemplate.Input)
            </div>
        </div>

        <h2>Source Contact</h2>
        <div class="mb-3">
            <button id="copy-caller-info" type="button" class="btn btn-outline-info">Copy contact/address from Caller</button>
        </div>
        <div class="row mb-3">
            <div class="col-md-6 mb-3">
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.SourceContactName, EditorTemplate.Input)
                </div>
                <div class="form-floating mb-3">
                    @Html.EditorFor(model => model.NewComplaint.SourceEmail, EditorTemplate.Input)
                </div>
                <div class="input-group mb-3">
                    <div class="form-floating">
                        <input asp-for="NewComplaint.SourcePhoneNumber!.Number" class="form-control" />
                        <label asp-for="NewComplaint.SourcePhoneNumber" class="form-label"></label>
                        <span asp-validation-for="NewComplaint.SourcePhoneNumber" class="invalid-feedback"></span>
                    </div>
                    @Html.EditorFor(model => model.NewComplaint.SourcePhoneNumber!.Type, EditorTemplate.Select,
                        additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                </div>
                <div class="input-group mb-3">
                    <div class="form-floating">
                        <input asp-for="NewComplaint.SourceSecondaryPhoneNumber!.Number" class="form-control" />
                        <label asp-for="NewComplaint.SourceSecondaryPhoneNumber" class="form-label"></label>
                        <span asp-validation-for="NewComplaint.SourceSecondaryPhoneNumber" class="invalid-feedback"></span>
                    </div>
                    @Html.EditorFor(model => model.NewComplaint.SourceSecondaryPhoneNumber!.Type, EditorTemplate.Select,
                        additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                </div>
                <div class="input-group mb-3">
                    <div class="form-floating">
                        <input asp-for="NewComplaint.SourceTertiaryPhoneNumber!.Number" class="form-control" />
                        <label asp-for="NewComplaint.SourceTertiaryPhoneNumber" class="form-label"></label>
                        <span asp-validation-for="NewComplaint.SourceTertiaryPhoneNumber" class="invalid-feedback"></span>
                    </div>
                    @Html.EditorFor(model => model.NewComplaint.SourceTertiaryPhoneNumber!.Type, EditorTemplate.Select,
                        additionalViewData: new { Items = phoneTypesSelectList, Placeholder = string.Empty })
                </div>
            </div>

            <div class="col-md-6 mb-3">
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.SourceAddress.Street, EditorTemplate.Input)
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.SourceAddress.Street2, EditorTemplate.Input)
                </div>
                <div class="mb-3">
                    @Html.EditorFor(model => model.NewComplaint.SourceAddress.City, EditorTemplate.Input)
                </div>
                <div class="input-group mb-3">
                    @Html.EditorFor(model => model.NewComplaint.SourceAddress.State, EditorTemplate.Select,
                        additionalViewData: new { Items = Model.StatesSelectList, Placeholder = string.Empty })
                    @Html.EditorFor(model => model.NewComplaint.SourceAddress.PostalCode, EditorTemplate.Input)
                </div>
            </div>
        </div>

        <h2>Attachments</h2>
        <div class="mb-3">
            <div class="row">
                <p class="col-md-9 col-lg-6">Selected files will be uploaded when Complaint is saved.</p>
            </div>
            <div class="row">
                <div class="col-md-9 col-lg-6">
                    <input class="form-control form-control-lg mb-3" type="file" asp-for="NewComplaint.Files" multiple accept="@FileTypes.FileTypesAcceptString">
                </div>
            </div>
            <div class="row">
                <p class="col-md-9 col-lg-6">
                    Up to ten files may be uploaded at a time. Supported file types are images, documents, and spreadsheets.
                    All files must comply with the <a href="~/static/Complaint-Attachments-Policy.pdf" target="_blank">EPD Complaint Attachments Policy (<abbr>PDF</abbr>)</a>.
                </p>
            </div>
        </div>

        <h2>Assignment</h2>
        <div class="row mb-3">
            <div class="col-md mb-3">
                @Html.EditorFor(model => model.NewComplaint.OfficeId, EditorTemplate.Select,
                    additionalViewData: new { Items = Model.OfficesSelectList })
            </div>
            <div class="col-md mb-3">
                @Html.EditorFor(model => model.NewComplaint.OwnerId, EditorTemplate.Select,
                    additionalViewData: new { Items = Model.ActiveStaffInOfficeSelectList, Placeholder = SelectOptions.SelectTextDefaultAssignor })
            </div>
        </div>

        <div class="mt-3 mb-1">
            <button id="SubmitButton" type="submit" class="btn btn-primary col-6 col-sm-4 col-lg-3 me-2">Add New Complaint</button>
            <a asp-page="Index" class="btn btn-outline-secondary">Cancel</a>
        </div>
        <div class="text-danger-emphasis mt-3">* denotes a required field</div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/copyContactInfo.js"></script>
    <script src="~/lib/axios/axios.min.js"></script>
    <script src="~/js/staffSelect.js"></script>
    <script>
    setUpStaffDropdown(
        "@nameof(Model.NewComplaint)_@nameof(ComplaintCreateDto.OfficeId)",
        "@nameof(Model.NewComplaint)_@nameof(ComplaintCreateDto.OwnerId)",
        true,
        "@SelectOptions.SelectTextDefaultAssignor");
    </script>
}
