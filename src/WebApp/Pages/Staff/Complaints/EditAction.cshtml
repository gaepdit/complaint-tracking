@page "{actionId:guid?}"
@using Cts.WebApp.Pages.Shared.DisplayTemplates
@using Cts.WebApp.Pages.Shared.EditorTemplates
@using GaEpd.AppLibrary.Extensions
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model EditActionModel

@{
    ViewData["Title"] = "Edit Complaint Action";
    ViewData["NoAnchors"] = "True";
}

<h1>@ViewData["Title"]</h1>

<div class="p-3 border rounded-3 bg-light-subtle mb-3">
    <form method="post">
        <div asp-validation-summary="All" class="alert alert-danger" role="alert"></div>
        <div class="row">
            <div class="col-md-4 mb-3">
                @Html.EditorFor(e => e.ActionItemUpdate.ActionDate, EditorTemplate.InputDateOnlyNullable)
            </div>
            <div class="col-md-8 mb-3">
                @Html.EditorFor(e => e.ActionItemUpdate.Investigator, EditorTemplate.Input)
            </div>
        </div>
        <div class="row">
            <div class="mb-3">
                @Html.EditorFor(e => e.ActionItemUpdate.ActionTypeId, EditorTemplate.Select, new { Items = Model.ActionItemTypeSelectList })
            </div>
        </div>
        <div class="row">
            <div class="mb-3">
                @Html.EditorFor(e => e.ActionItemUpdate.Comments, EditorTemplate.Textarea, new { Rows = 3 })
            </div>
        </div>

        <div class="mt-3 mb-1">
            <button type="submit" class="btn btn-primary col-6 col-sm-4 col-lg-3 me-2">Save Changes</button>
            <a asp-page="Details" asp-route-id="@Model.ComplaintView.Id.ToString()" asp-fragment="@Model.ActionItemId" class="btn btn-outline-secondary">Cancel</a>
        </div>
        <div class="text-danger-emphasis">* denotes a required field</div>
        <input asp-for="ActionItemId" type="hidden" />
    </form>
</div>

<div class="p-3 border rounded-3 bg-dark-subtle text-dark-emphasis">
    <div class="container small">
        <h2>For Complaint ID @Model.ActionItemUpdate.ComplaintId.ToString()</h2>
        <dl class="row">
            <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.ComplaintView.Status)</dt>
            <dd class="col-md-8 col-lg-9">@Model.ComplaintView.Status.GetDisplayName()</dd>
            <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.ComplaintView.CurrentOfficeName)</dt>
            <dd class="col-md-8 col-lg-9">@Html.DisplayFor(m => m.ComplaintView.CurrentOfficeName)</dd>
            <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.ComplaintView.CurrentOwner)</dt>
            <dd class="col-md-8 col-lg-9">@Html.DisplayFor(m => m.ComplaintView.CurrentOwner, DisplayTemplate.FullStaffView)</dd>
            <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.ComplaintView.PrimaryConcernName)</dt>
            <dd class="col-md-8 col-lg-9">@Html.DisplayFor(m => m.ComplaintView.PrimaryConcernName)</dd>
            <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.ComplaintView.SecondaryConcernName)</dt>
            <dd class="col-md-8 col-lg-9">@Html.DisplayFor(m => m.ComplaintView.SecondaryConcernName)</dd>
            <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.ComplaintView.ComplaintCounty)</dt>
            <dd class="col-md-8 col-lg-9">@Html.DisplayFor(m => m.ComplaintView.ComplaintCounty)</dd>
            <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.ComplaintView.ComplaintNature)</dt>
            <dd class="col-md-8 col-lg-9">@Html.DisplayFor(m => m.ComplaintView.ComplaintNature, DisplayTemplate.TruncateText)</dd>
        </dl>
    </div>
</div>
