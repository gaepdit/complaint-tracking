@using Cts.WebApp.Models
@model Cts.WebApp.Models.DisplayMessage?
@{
    var iconsFile = Url.Content("~/images/app-icons.svg");
}

@if (Model != null)
{
    <div class="alert @Model.AlertClass alert-dismissible fade show d-flex align-items-center" role="alert">
        @{
            switch (Model.Context)
            {
                case DisplayMessage.AlertContext.Success:
                    <svg class="bi me-3">
                        <use href="@iconsFile#check-circle-fill"></use>
                    </svg>
                    break;

                case DisplayMessage.AlertContext.Info:
                    <svg class="bi me-3">
                        <use href="@iconsFile#info-circle-fill"></use>
                    </svg>
                    break;

                case DisplayMessage.AlertContext.Danger:
                case DisplayMessage.AlertContext.Warning:
                    <svg class="bi me-3">
                        <use href="@iconsFile#exclamation-triangle-fill"></use>
                    </svg>
                    break;

                case DisplayMessage.AlertContext.Primary:
                case DisplayMessage.AlertContext.Secondary:
                default:
                    break;
            }
        }

        <div>
            @Model.Message
            @if (Model.Details.Exists(s => !string.IsNullOrEmpty(s)))
            {
                @:The following warnings were generated:
                <ul class="pt-1 mb-0 ps-3">
                    @foreach (var s in Model.Details)
                    {
                        <li>@s</li>
                    }
                </ul>
            }
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    </div>
}
