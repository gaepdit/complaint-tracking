@using Cts.AppServices.Complaints.QueryDto
@using Cts.WebApp.Models
@using Cts.WebApp.Pages.Shared.DisplayTemplates
@model Cts.WebApp.Models.SearchResultsDisplay

<partial name="_PaginationNavAndCount" model="Model.Pagination" />
<div class="table-responsive-md">
    <table class="table table-collapsible table-hover" aria-label="Complaint search results">
        <thead>
        <tr class="text-nowrap">
            <partial name="_SortableTableColHead" model='new SearchResultsColumnDisplay("ID", SortBy.IdAsc, SortBy.IdDesc, Model.Spec)' />
            <partial name="_SortableTableColHead" model='new SearchResultsColumnDisplay("Date Received", SortBy.ReceivedDateAsc, SortBy.ReceivedDateDesc, Model.Spec)' />
            <partial name="_SortableTableColHead" model='new SearchResultsColumnDisplay("Status", SortBy.StatusAsc, SortBy.StatusDesc, Model.Spec)' />
            <th scope="col" data-label="Source & Location">Source & Location</th>
            <th scope="col" data-label="Staff/Office Assigned">Staff/Office Assigned</th>
            <th scope="col" data-label="Area(s) of Concern">Area(s) of Concern</th>
        </tr>
        </thead>

        <tbody>
        @foreach (var item in Model.SearchResults.Items)
        {
            <tr>
                <th scope="row" data-label="Complaint ID">
                    @if (Model.IsPublic)
                    {
                        <a asp-page="./Complaint" asp-route-id="@item.Id.ToString()"
                           class="btn btn-outline-primary btn-sm">
                            @item.Id.ToString()
                        </a>
                    }
                    else
                    {
                        <a asp-page="Details" asp-route-id="@item.Id.ToString()"
                           class="btn btn-outline-primary btn-sm @(item.IsDeleted ? "btn-outline-danger" : "btn-outline-primary")">
                            @item.Id.ToString()
                        </a>
                    }
                    @if (item.IsDeleted)
                    {
                        <br />
                        <span class="text-uppercase text-danger-emphasis">Deleted</span>
                    }
                </th>
                <td data-label="Date Received">@Html.DisplayFor(_ => item.ReceivedDate, DisplayTemplate.ShortDate)</td>
                <td data-label="Status">
                    @Html.DisplayFor(_ => item.Status)
                    @if (item is { ComplaintClosed: true, ComplaintClosedDate: not null })
                    {
                        @:on @Html.DisplayFor(_ => item.ComplaintClosedDate, DisplayTemplate.ShortDate)
                    }
                </td>
                <td data-label="Source & Location">
                    @Html.DisplayFor(_ => item.SourceFacilityName, DisplayTemplate.StringOrPlaceholder)
                    <ul class="mb-0">
                        @if (item.SourceFacilityIdNumber != null)
                        {
                            <li>ID: @item.SourceFacilityIdNumber</li>
                        }
                        @if (!string.IsNullOrEmpty(item.ComplaintCity))
                        {
                            <li>City: @item.ComplaintCity</li>
                        }
                        @if (item.ComplaintCounty != null)
                        {
                            <li>@Html.DisplayFor(_ => item.ComplaintCounty, DisplayTemplate.County)</li>
                        }
                        @if (item.SourceAddressCityState != null)
                        {
                            <li>Contact location: @item.SourceAddressCityState</li>
                        }
                    </ul>
                </td>
                <td data-label="Staff/Office Assigned">
                    @Html.DisplayFor(_ => item.AssignedOwnerName, DisplayTemplate.StringOrPlaceholder, new { Placeholder = "[Unassigned]" })
                    <br class="d-none d-md-inline" /><span class="d-inline d-md-none">â€”</span>
                    @Html.DisplayFor(_ => item.CurrentOfficeName, DisplayTemplate.StringOrPlaceholder, new { Placeholder = "[No office assigned]" })
                </td>
                <td data-label="Area(s) of Concern">
                    @if (item.SecondaryConcernName is null)
                    {
                        @Html.DisplayFor(_ => item.PrimaryConcernName, DisplayTemplate.StringOrPlaceholder)
                    }
                    else
                    {
                        <ol class="mb-0 ps-md-3">
                            <li>@Html.DisplayFor(_ => item.PrimaryConcernName, DisplayTemplate.StringOrPlaceholder)</li>
                            <li>@Html.DisplayFor(_ => item.SecondaryConcernName, DisplayTemplate.StringOrPlaceholder)</li>
                        </ol>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
<partial name="_PaginationNav" model="Model.Pagination" />
